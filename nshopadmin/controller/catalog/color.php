<?phpclass ControllerCatalogcolor extends Controller {    private $error = array();    public function index() {        $this->load->language('catalog/color');        $this->document->title = $this->language->get('heading_title');        $this->load->model('catalog/color');        $this->getList();    }    public function insert() {        $this->load->language('catalog/color');        $this->document->title = $this->language->get('heading_title');        $this->load->model('catalog/color');        if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {            $this->model_catalog_color->addcolor($this->request->post);            $this->session->data['success'] = $this->language->get('text_success');            $url = '';            if (isset($this->request->get['page'])) {                $url .= '&page=' . $this->request->get['page'];            }            if (isset($this->request->get['sort'])) {                $url .= '&sort=' . $this->request->get['sort'];            }            if (isset($this->request->get['order'])) {                $url .= '&order=' . $this->request->get['order'];            }            $this->redirect(HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url);        }        $this->getForm();    }    public function update() {        $this->load->language('catalog/color');        $this->document->title = $this->language->get('heading_title');        $this->load->model('catalog/color');        if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {            $this->model_catalog_color->editColor($this->request->get['color_id'], $this->request->post);            $this->session->data['success'] = $this->language->get('text_success');            $url = '';            if (isset($this->request->get['filter_name'])) {                $url .= '&filter_name=' . $this->request->get['filter_name'];            }            if (isset($this->request->get['filter_hex_code'])) {                $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];            }            if (isset($this->request->get['page'])) {                $url .= '&page=' . $this->request->get['page'];            }            if (isset($this->request->get['sort'])) {                $url .= '&sort=' . $this->request->get['sort'];            }            if (isset($this->request->get['order'])) {                $url .= '&order=' . $this->request->get['order'];            }            $this->redirect(HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url);        }        $this->getForm();    }    public function delete() {        $this->load->language('catalog/color');        $this->document->title = $this->language->get('heading_title');        $this->load->model('catalog/color');        if (isset($this->request->post['selected']) && $this->validateDelete()) {            foreach ($this->request->post['selected'] as $color_id) {                $this->model_catalog_color->deletecolor($color_id);            }            $this->session->data['success'] = $this->language->get('text_success');            $url = '';            if (isset($this->request->get['filter_name'])) {                $url .= '&filter_name=' . $this->request->get['filter_name'];            }            if (isset($this->request->get['filter_hex_code'])) {                $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];            }            if (isset($this->request->get['page'])) {                $url .= '&page=' . $this->request->get['page'];            }            if (isset($this->request->get['sort'])) {                $url .= '&sort=' . $this->request->get['sort'];            }            if (isset($this->request->get['order'])) {                $url .= '&order=' . $this->request->get['order'];            }            $this->redirect(HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url);        }        $this->getList();    }    public function update_multiple() {        $this->load->language('catalog/color');        $this->document->title = $this->language->get('heading_title');        $this->load->model('catalog/color');        if (isset($this->request->post['selected'])) {            foreach ($this->request->post['selected'] as $row => $color_id) {                $this->model_catalog_color->editColorCode($color_id,$this->request->post['hex_code'][$row]);            }            $this->session->data['success'] = $this->language->get('text_success');        }        $url = '';        if (isset($this->request->get['filter_name'])) {            $url .= '&filter_name=' . $this->request->get['filter_name'];        }        if (isset($this->request->get['filter_hex_code'])) {            $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];        }        if (isset($this->request->get['page'])) {            $url .= '&page=' . $this->request->get['page'];        }        if (isset($this->request->get['sort'])) {            $url .= '&sort=' . $this->request->get['sort'];        }        if (isset($this->request->get['order'])) {            $url .= '&order=' . $this->request->get['order'];        }        $this->redirect(HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url);    }    private function getList() {        if (isset($this->request->get['page'])) {            $page = $this->request->get['page'];        } else {            $page = 1;        }        if (isset($this->request->get['sort'])) {            $sort = $this->request->get['sort'];        } else {            $sort = 'name';        }        if (isset($this->request->get['order'])) {            $order = $this->request->get['order'];        } else {            $order = 'ASC';        }        if (isset($this->request->get['filter_name'])) {            $filter_name = $this->request->get['filter_name'];        } else {            $filter_name = NULL;        }        if (isset($this->request->get['filter_hex_code'])) {            $filter_hex_code = $this->request->get['filter_hex_code'];        } else {            $filter_hex_code = NULL;        }        $url = '';        if (isset($this->request->get['filter_name'])) {            $url .= '&filter_name=' . $this->request->get['filter_name'];        }        if (isset($this->request->get['filter_hex_code'])) {            $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];        }        if (isset($this->request->get['page'])) {            $url .= '&page=' . $this->request->get['page'];        }        if (isset($this->request->get['sort'])) {            $url .= '&sort=' . $this->request->get['sort'];        }        if (isset($this->request->get['order'])) {            $url .= '&order=' . $this->request->get['order'];        }        $this->document->breadcrumbs = array();        $this->document->breadcrumbs[] = array(            'href' => HTTPS_SERVER . 'common/home&token=' . $this->session->data['token'],            'text' => $this->language->get('text_home'),            'separator' => FALSE        );        $this->document->breadcrumbs[] = array(            'href' => HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url,            'text' => $this->language->get('heading_title'),            'separator' => ' :: '        );        $this->data['insert'] = HTTPS_SERVER . 'catalog/color/insert&token=' . $this->session->data['token'] . $url;        $this->data['delete'] = HTTPS_SERVER . 'catalog/color/delete&token=' . $this->session->data['token'] . $url;        $this->data['action_update'] = HTTPS_SERVER . 'catalog/color/update_multiple&token=' . $this->session->data['token'] . $url;        $this->data['colors'] = array();        $data = array(            'filter_name'	  => $filter_name,            'filter_hex_code'	  => $filter_hex_code,            'sort' => $sort,            'order' => $order,            'start' => ($page - 1) * $this->config->get('config_admin_limit'),            'limit' => $this->config->get('config_admin_limit')        );        $color_total = $this->model_catalog_color->getTotalcolors($data);        $results = $this->model_catalog_color->getcolors($data);        foreach ($results as $result) {            $action = array();            $action[] = array(                'text' => $this->language->get('text_edit'),                'href' => HTTPS_SERVER . 'catalog/color/update&token=' . $this->session->data['token'] . '&color_id=' . $result['color_id'] . $url            );            $this->data['colors'][] = array(                'color_id' => $result['color_id'],                'name' => $result['name'],                'hex_code' => $result['hex_code'],                'selected' => isset($this->request->post['selected']) && in_array($result['color_id'], $this->request->post['selected']),                'action' => $action            );        }        $this->data['heading_title'] = $this->language->get('heading_title');        $this->data['text_no_results'] = $this->language->get('text_no_results');        $this->data['column_name'] = $this->language->get('column_name');        $this->data['column_hex_code'] = $this->language->get('column_hex_code');        $this->data['column_action'] = $this->language->get('column_action');        $this->data['button_insert'] = $this->language->get('button_insert');        $this->data['button_delete'] = $this->language->get('button_delete');        $this->data['button_update'] = $this->language->get('button_update');        $this->data['button_filter'] = $this->language->get('button_filter');        if (isset($this->error['warning'])) {            $this->data['error_warning'] = $this->error['warning'];        } else {            $this->data['error_warning'] = '';        }        if (isset($this->session->data['success'])) {            $this->data['success'] = $this->session->data['success'];            unset($this->session->data['success']);        } else {            $this->data['success'] = '';        }//        $url = '';////        if (isset($this->request->get['sort'])) {//            $url .= '&sort=' . $this->request->get['sort'];//        }////        if (isset($this->request->get['order'])) {//            $url .= '&order=' . $this->request->get['order'];//        }//        $pagination = new Pagination();        $pagination->total = $color_total;        $pagination->page = $page;        $pagination->limit = $this->config->get('config_admin_limit');        $pagination->text = $this->language->get('text_pagination');        $pagination->url = HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url . '&page={page}';        $this->data['pagination'] = $pagination->render();        $url = '';        if (isset($this->request->get['filter_name'])) {            $url .= '&filter_name=' . $this->request->get['filter_name'];        }        if (isset($this->request->get['filter_hex_code'])) {            $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];        }        if ($order == 'ASC') {            $url .= '&order=DESC';        } else {            $url .= '&order=ASC';        }        if (isset($this->request->get['page'])) {            $url .= '&page=' . $this->request->get['page'];        }        $this->data['sort_name'] = HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . '&sort=name' . $url;        $this->data['sort_hex_code'] = HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . '&sort=hex_code' . $url;        $this->data['sort'] = $sort;        $this->data['order'] = $order;        $this->data['filter_name'] = $filter_name;        $this->data['filter_hex_code'] = $filter_hex_code;        $this->template = 'catalog/color_list.tpl';        $this->response->setOutput($this->render(), $this->config->get('config_compression'));    }    private function getForm() {        $this->data['heading_title'] = $this->language->get('heading_title');        $this->data['text_enabled'] = $this->language->get('text_enabled');        $this->data['text_disabled'] = $this->language->get('text_disabled');        $this->data['text_default'] = $this->language->get('text_default');        $this->data['text_image_manager'] = $this->language->get('text_image_manager');        $this->data['entry_name'] = $this->language->get('entry_name');        $this->data['entry_hex_code'] = $this->language->get('entry_hex_code');        $this->data['button_save'] = $this->language->get('button_save');        $this->data['button_cancel'] = $this->language->get('button_cancel');        if (isset($this->error['warning'])) {            $this->data['error_warning'] = $this->error['warning'];        } else {            $this->data['error_warning'] = '';        }        if (isset($this->error['name'])) {            $this->data['error_name'] = $this->error['name'];        } else {            $this->data['error_name'] = '';        }        $url = '';        if (isset($this->request->get['filter_name'])) {            $url .= '&filter_name=' . $this->request->get['filter_name'];        }        if (isset($this->request->get['filter_hex_code'])) {            $url .= '&filter_hex_code=' . $this->request->get['filter_hex_code'];        }        if (isset($this->request->get['page'])) {            $url .= '&page=' . $this->request->get['page'];        }        if (isset($this->request->get['sort'])) {            $url .= '&sort=' . $this->request->get['sort'];        }        if (isset($this->request->get['order'])) {            $url .= '&order=' . $this->request->get['order'];        }        $this->document->breadcrumbs = array();        $this->document->breadcrumbs[] = array(            'href' => HTTPS_SERVER . 'common/home&token=' . $this->session->data['token'],            'text' => $this->language->get('text_home'),            'separator' => FALSE        );        $this->document->breadcrumbs[] = array(            'href' => HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url,            'text' => $this->language->get('heading_title'),            'separator' => ' :: '        );        if (!isset($this->request->get['color_id'])) {            $this->data['action'] = HTTPS_SERVER . 'catalog/color/insert&token=' . $this->session->data['token'] . $url;        } else {            $this->data['action'] = HTTPS_SERVER . 'catalog/color/update&token=' . $this->session->data['token'] . '&color_id=' . $this->request->get['color_id'] . $url;        }        $this->data['cancel'] = HTTPS_SERVER . 'catalog/color&token=' . $this->session->data['token'] . $url;        $this->data['token'] = $this->session->data['token'];        if (isset($this->request->get['color_id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {            $color_info = $this->model_catalog_color->getcolor($this->request->get['color_id']);        }        if (isset($this->request->post['name'])) {            $this->data['name'] = $this->request->post['name'];        } elseif (isset($color_info)) {            $this->data['name'] = $color_info['name'];        } else {            $this->data['name'] = '';        }        if (isset($this->request->post['hex_code'])) {            $this->data['hex_code'] = $this->request->post['hex_code'];        } elseif (isset($color_info)) {            $this->data['hex_code'] = $color_info['hex_code'];        } else {            $this->data['hex_code'] = '';        }        $this->template = 'catalog/color_form.tpl';        $this->response->setOutput($this->render(), $this->config->get('config_compression'));    }    private function validateForm() {        if (!$this->user->hasPermission('modify', 'catalog/color')) {            $this->error['warning'] = $this->language->get('error_permission');        }        if ((strlen(utf8_decode($this->request->post['name'])) < 3) || (strlen(utf8_decode($this->request->post['name'])) > 32)) {            $this->error['name'] = $this->language->get('error_name');        }        if (!$this->error) {            return TRUE;        } else {            return FALSE;        }    }    private function validateDelete() {        if (!$this->user->hasPermission('modify', 'catalog/color')) {            $this->error['warning'] = $this->language->get('error_permission');        }        if (!$this->error) {            return TRUE;        } else {            return FALSE;        }    }}?>