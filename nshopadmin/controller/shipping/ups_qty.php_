<?php

class ControllerShippingUpsQty extends Controller {

    private $error = array();

    public function index() {
        $this->load->language('shipping/ups_qty');

        $this->document->title = $this->language->get('heading_title');

        $this->load->model('setting/setting');

        if (($this->request->server['REQUEST_METHOD'] == 'POST') && ($this->validate())) {
            
            $data = array();
            foreach($this->request->post as $key => $post) {
                if($key == 'rate') {
                    foreach($post as $k => $v) {
                        $data[$k] = serialize($v);
                    }
                } else {
                    $data[$key] = $post;
                }
            }
            Make::a('setting/setting')->create()->editSetting('ups_qty', $data);

            $this->session->data['success'] = $this->language->get('text_success');

            $this->redirect(HTTPS_SERVER . 'extension/shipping&token=' . $this->session->data['token']);
        }

        $this->data['heading_title'] = $this->language->get('heading_title');

        $this->data['text_none'] = $this->language->get('text_none');
        $this->data['text_enabled'] = $this->language->get('text_enabled');
        $this->data['text_disabled'] = $this->language->get('text_disabled');

        $this->data['entry_rate'] = $this->language->get('entry_rate');
        $this->data['entry_ups_qty_class'] = $this->language->get('entry_ups_qty_class');
        $this->data['entry_tax'] = $this->language->get('entry_tax');
        $this->data['entry_status'] = $this->language->get('entry_status');
        $this->data['entry_sort_order'] = $this->language->get('entry_sort_order');

        $this->data['button_save'] = $this->language->get('button_save');
        $this->data['button_cancel'] = $this->language->get('button_cancel');

        $this->data['tab_general'] = $this->language->get('tab_general');

        if (isset($this->error['warning'])) {
            $this->data['error_warning'] = $this->error['warning'];
        } else {
            $this->data['error_warning'] = '';
        }

        $this->document->breadcrumbs = array();

        $this->document->breadcrumbs[] = array(
            'href' => HTTPS_SERVER . 'common/home&token=' . $this->session->data['token'],
            'text' => $this->language->get('text_home'),
            'separator' => FALSE
        );

        $this->document->breadcrumbs[] = array(
            'href' => HTTPS_SERVER . 'extension/shipping&token=' . $this->session->data['token'],
            'text' => $this->language->get('text_shipping'),
            'separator' => ' :: '
        );

        $this->document->breadcrumbs[] = array(
            'href' => HTTPS_SERVER . 'shipping/ups_qty&token=' . $this->session->data['token'],
            'text' => $this->language->get('heading_title'),
            'separator' => ' :: '
        );

        $this->data['action'] = HTTPS_SERVER . 'shipping/ups_qty&token=' . $this->session->data['token'];
        $this->data['cancel'] = HTTPS_SERVER . 'extension/shipping&token=' . $this->session->data['token'];

        if (isset($this->request->post['ups_qty_tax_class_id'])) {
            $this->data['ups_qty_tax_class_id'] = $this->request->post['ups_qty_tax_class_id'];
        } else {
            $this->data['ups_qty_tax_class_id'] = $this->config->get('ups_qty_tax_class_id');
        }

        if (isset($this->request->post['ups_qty_status'])) {
            $this->data['ups_qty_status'] = $this->request->post['ups_qty_status'];
        } else {
            $this->data['ups_qty_status'] = $this->config->get('ups_qty_status');
        }

        if (isset($this->request->post['ups_qty_sort_order'])) {
            $this->data['ups_qty_sort_order'] = $this->request->post['ups_qty_sort_order'];
        } else {
            $this->data['ups_qty_sort_order'] = $this->config->get('ups_qty_sort_order');
        }

        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_01',
            'name'  =>  'Next day Air'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_02',
            'name'  =>  '2nd day Air'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_03',
            'name'  =>  'Ground'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_07',
            'name'  =>  'Worldwide Express'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_08',
            'name'  =>  'Worldwide Expedited'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_11',
            'name'  =>  'Standard'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_12',
            'name'  =>  '3 Day Select'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_13',
            'name'  =>  'Next Day Air Saver'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_14',
            'name'  =>  'Next Day Air Early A.M.'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_54',
            'name'  =>  'Worldwide Express Plus'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_59',
            'name'  =>  '2nd Day Air A.M'
        );
        $this->data['ups_methods'][] = array(
            'code'  =>  'ups_65',
            'name'  =>  'Saver'
        );
        
        $this->load->model('localisation/geo_zone');
        $geo_zones = $this->model_localisation_geo_zone->getGeoZones();

        foreach ($geo_zones as $geo_zone) {
            if (isset($this->request->post['ups_qty_' . $geo_zone['geo_zone_id'] . '_status'])) {
                $this->data['ups_qty_' . $geo_zone['geo_zone_id'] . '_status'] = $this->request->post['ups_qty_' . $geo_zone['geo_zone_id'] . '_status'];
            } else {
                $this->data['ups_qty_' . $geo_zone['geo_zone_id'] . '_status'] = $this->config->get('ups_qty_' . $geo_zone['geo_zone_id'] . '_status');
            }

            if (isset($this->request->post['ups_qty_' . $geo_zone['geo_zone_id'] . '_rate'])) {
                $this->data['ups_qty_' . $geo_zone['geo_zone_id'] . '_rate'] = $this->request->post['ups_qty_' . $geo_zone['geo_zone_id'] . '_rate'];
            } else {
                $this->data['ups_qty_' . $geo_zone['geo_zone_id'] . '_rate'] = unserialize($this->config->get('ups_qty_' . $geo_zone['geo_zone_id'] . '_rate'));
            }

        }

        $this->data['geo_zones'] = $geo_zones;

        $this->load->model('localisation/tax_class');

        $this->data['tax_classes'] = $this->model_localisation_tax_class->getTaxClasses();

        $this->template = 'shipping/ups_qty.tpl';
        
        $this->response->setOutput($this->render(), $this->config->get('config_compression'));
    }

    private function validate() {
        if (!$this->user->hasPermission('modify', 'shipping/ups_qty')) {
            $this->error['warning'] = $this->language->get('error_permission');
        }

        if (!$this->error) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

}

?>